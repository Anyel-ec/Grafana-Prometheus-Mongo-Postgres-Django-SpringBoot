version: '3.9'

services:
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_storage:/var/lib/grafana
    networks:
      - eureka-network

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro 
    networks:
      - eureka-network

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    ports:
      - "9187:9187"
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:${POSTGRES_PASSWORD}@postgresql_db:5432/${POSTGRES_DB}?sslmode=disable"
    depends_on:
      - postgresql_db
    networks:
      - eureka-network

  mongo-exporter:
    image: ssheehy/mongodb-exporter:latest
    ports:
      - "9216:9216"
    environment:
      MONGODB_URI: "mongodb://mongo_db:27017"
    depends_on:
      - mongo_db
    networks:
      - eureka-network

  # PostgreSQL Service
  postgresql_db:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    networks:
      - eureka-network

  # Django Service
  django_app:
    build:
      context: ./Django_Rest
      dockerfile: Dockerfile
    command: ["sh", "-c", "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"]
    volumes:
      - ./Django_Rest:/app
    ports:
      - "8000:8000"
    depends_on:
      - postgresql_db
      - eureka-server
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: postgresql_db
      POSTGRES_PORT: 5432
      EUREKA_SERVER: http://eureka-server:8761/eureka
      ALLOWED_HOSTS: "*"
    networks:
      - eureka-network

  # MongoDB Service
  mongo_db:
    image: mongo:latest
    ports:
      - "27020:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - eureka-network

  # Spring Boot Service
  spring_app:
    build:
      context: ./SpringBoot
      dockerfile: Dockerfile
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongo_db:27017/mongo_rrss
      - EUREKA_SERVER=http://eureka-server:8761/eureka
    depends_on:
      - mongo_db
      - eureka-server
      - django_app
    ports:
      - "8082:8082"
    volumes:
      - ./SpringBoot:/app
    networks:
      - eureka-network
  
  # Eureka Server
  eureka-server:
    build:
      context: ./Eureka
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - eureka-network
  
  # Spring Cloud Gateway
  api-gateway:
    build:
      context: ./Gateway
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      - eureka-server
      - spring_app
      - django_app
    environment:
      - EUREKA_SERVER=http://eureka-server:8761/eureka
    networks:
      - eureka-network

networks:
  eureka-network:
    driver: bridge
  
volumes:
  grafana_storage:
  postgres_data:
  mongo_data:
